{
  "application": "ml-training-pipelines",
  "keepWaitingPipelines": false,
  "limitConcurrent": true,
  "name": "internaltools-staging-chef-lockable",
  "notifications": [],
  "parameterConfig": [
    {
      "default": "main",
      "description": "Version of the App to deploy e.g. \"v23\". To deploy your branch use branch name without \"-deploy\" suffix e.g. \"jdoe.feature-branch-name\"",
      "hasOptions": false,
      "name": "gitRef",
      "pinned": true,
      "required": true
    },
    {
      "default": "1",
      "description": "How many hours to lock the stage for",
      "hasOptions": true,
      "label": "Lock duration",
      "name": "lockDuration",
      "options": [
        {
          "value": "0"
        },
        {
          "value": "1"
        },
        {
          "value": "2"
        },
        {
          "value": "3"
        },
        {
          "value": "4"
        },
        {
          "value": "5"
        },
        {
          "value": "6"
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "false",
      "description": "Skip preflight check for this pipeline execution",
      "hasOptions": true,
      "label": "Skip preflight check",
      "name": "skipPreflightCheck",
      "options": [
        {
          "value": "true"
        },
        {
          "value": "false"
        }
      ],
      "pinned": false,
      "required": false
    }
  ],
  "roles": [
    "okta:role:ml-training-pipelines"
  ],
  "stages": [
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": false,
      "failPipeline": true,
      "name": "preflight-resolve-git-ref",
      "parameters": {
        "commit": "${ parameters.gitRef }",
        "organization": "zendesk",
        "project": "ml-training-pipelines"
      },
      "refId": "preflight-resolve-git-ref",
      "requisiteStageRefIds": [],
      "type": "getGithubCommitStatusJob",
      "waitForCompletion": false
    },
    {
      "account": "internaltools-staging-use1-chef",
      "alias": "runJob",
      "application": "ml-training-pipelines",
      "applicationName": "ml-training-pipelines",
      "cloudProvider": "kubernetes",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": false,
      "failPipeline": true,
      "manifest": {
        "apiVersion": "batch/v1",
        "kind": "Job",
        "metadata": {
          "annotations": {
            "moniker.spinnaker.io/cluster": "internaltools-staging-use1-chef",
            "moniker.spinnaker.io/detail": "${ parameters.gitRef.replaceAll(\"[^A-Za-z0-9_-]\",\"-\").replaceAll(\"--\",\"-\") }",
            "moniker.spinnaker.io/stack": "ml-training-pipelines-cicd-toolkit-preflight",
            "sidecar.istio.io/inject": "false"
          },
          "generateName": "cicd-toolkit-preflight-ml-training-pipelines-",
          "labels": {
            "branch": "unknown",
            "deploy_id": "unknown",
            "product": "ml-training-pipelines",
            "project": "ml-training-pipelines",
            "role": "cicd-toolkit-preflight",
            "sidecar.istio.io/inject": "false",
            "team": "ml-apac-trisolaris",
            "track": "unknown"
          },
          "namespace": "cicd-toolkit"
        },
        "spec": {
          "activeDeadlineSeconds": 3600,
          "backoffLimit": 0,
          "template": {
            "metadata": {
              "annotations": {
                "moniker.spinnaker.io/cluster": "internaltools-staging-use1-chef",
                "moniker.spinnaker.io/detail": "${ parameters.gitRef.replaceAll(\"[^A-Za-z0-9_-]\",\"-\").replaceAll(\"--\",\"-\") }",
                "moniker.spinnaker.io/stack": "ml-training-pipelines-cicd-toolkit-preflight",
                "secret/GCLOUD_IMAGE_PULL_PASSWORD": "global/cicd-toolkit/global/gcloud_image_pull_password",
                "secret/GCLOUD_IMAGE_PULL_USERNAME": "global/cicd-toolkit/global/gcloud_image_pull_username",
                "secret/GITHUB_TOKEN": "staging/cicd-toolkit/global/github_token",
                "sidecar.istio.io/inject": "false"
              },
              "labels": {
                "branch": "unknown",
                "deploy_group": "internaltools-staging-use1-chef",
                "deploy_id": "unknown",
                "product": "ml-training-pipelines",
                "project": "ml-training-pipelines",
                "revision": "${ #stage(\"preflight-resolve-git-ref\").context.sha }",
                "role": "cicd-toolkit-preflight",
                "sidecar.istio.io/inject": "false",
                "tag": "${ parameters.gitRef.replaceAll(\"[^A-Za-z0-9_-]\",\"-\").replaceAll(\"--\",\"-\") }",
                "team": "ml-apac-trisolaris",
                "track": "unknown"
              }
            },
            "spec": {
              "containers": [
                {
                  "command": [
                    "/app/scripts/preflight.sh"
                  ],
                  "env": [
                    {
                      "name": "DD_ENV",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.labels['tags.datadoghq.com/env']"
                        }
                      }
                    },
                    {
                      "name": "DD_SERVICE",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.labels['tags.datadoghq.com/service']"
                        }
                      }
                    },
                    {
                      "name": "DD_VERSION",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.labels['tags.datadoghq.com/version']"
                        }
                      }
                    },
                    {
                      "name": "DEPLOY_ID",
                      "value": "unknown"
                    },
                    {
                      "name": "POD_IP",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "status.podIP"
                        }
                      }
                    },
                    {
                      "name": "POD_NAME",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.name"
                        }
                      }
                    },
                    {
                      "name": "POD_NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    },
                    {
                      "name": "PROJECT",
                      "value": "ml-training-pipelines"
                    },
                    {
                      "name": "REVISION",
                      "value": "${ #stage(\"preflight-resolve-git-ref\").context.sha }"
                    },
                    {
                      "name": "ROLE",
                      "value": "cicd-toolkit-preflight"
                    },
                    {
                      "name": "TAG",
                      "value": "${ parameters.gitRef.replaceAll(\"[^A-Za-z0-9_-]\",\"-\").replaceAll(\"--\",\"-\") }"
                    },
                    {
                      "name": "PROJECT_NAME",
                      "value": "ml-training-pipelines"
                    },
                    {
                      "name": "DEPLOY_TARGETS",
                      "value": "internaltools-staging-use1-chef"
                    },
                    {
                      "name": "DEPLOY_MANIFESTS_PREFIX",
                      "value": "staging/internaltools-staging-use1-chef"
                    },
                    {
                      "name": "GITHUB_REPOSITORY",
                      "value": "zendesk/ml-training-pipelines"
                    },
                    {
                      "name": "GIT_TAG",
                      "value": "${ parameters.gitRef }"
                    }
                  ],
                  "image": "713408432298.dkr.ecr.us-west-2.amazonaws.com/zendesk/cicd-toolkit:7c6eb07e314c45cb04b587f67b5089e54856699e",
                  "name": "preflight",
                  "resources": {
                    "limits": {
                      "cpu": "0.5",
                      "memory": "256M"
                    },
                    "requests": {
                      "cpu": "0.5",
                      "memory": "256M"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/secrets",
                      "name": "secrets-volume"
                    }
                  ]
                }
              ],
              "dnsConfig": {
                "options": [
                  {
                    "name": "single-request-reopen"
                  }
                ]
              },
              "initContainers": [
                {
                  "env": [
                    {
                      "name": "VAULT_TOKEN",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "authsecret",
                          "name": "vaultauth"
                        }
                      }
                    },
                    {
                      "name": "RUN_ONCE",
                      "value": "true"
                    },
                    {
                      "name": "VAULT_ADDR",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "address",
                          "name": "vaultauth"
                        }
                      }
                    },
                    {
                      "name": "VAULT_ROLE",
                      "value": "samson_secret_puller"
                    },
                    {
                      "name": "JWT_TOKEN_PATH",
                      "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                    },
                    {
                      "name": "K8S_AUTH_BACKEND_PATH",
                      "value": "auth/kubernetes"
                    },
                    {
                      "name": "STATSD_ADDR",
                      "value": "169.254.1.1:8125"
                    },
                    {
                      "name": "STATSD_APM_PORT",
                      "value": "8126"
                    },
                    {
                      "name": "STATSD_HOST",
                      "value": "169.254.1.1"
                    },
                    {
                      "name": "STATSD_PORT",
                      "value": "8125"
                    }
                  ],
                  "image": "713408432298.dkr.ecr.us-west-2.amazonaws.com/prod/zendesk/secret-sidecar:v1.3.28",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "secret-init",
                  "resources": {
                    "limits": {
                      "cpu": "20m",
                      "memory": "100Mi"
                    },
                    "requests": {
                      "cpu": "2m",
                      "memory": "20Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsNonRoot": true,
                    "runAsUser": 1000
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/secrets",
                      "name": "secrets-volume"
                    },
                    {
                      "mountPath": "/secrets-meta",
                      "name": "secrets-meta"
                    },
                    {
                      "mountPath": "/podinfo",
                      "name": "annotations"
                    },
                    {
                      "mountPath": "/vault",
                      "name": "vault-data"
                    }
                  ]
                }
              ],
              "restartPolicy": "Never",
              "securityContext": {
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "volumes": [
                {
                  "emptyDir": {
                    "medium": "Memory"
                  },
                  "name": "secrets-volume"
                },
                {
                  "name": "vaultauth",
                  "secret": {
                    "secretName": "vaultauth"
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "fieldPath": "metadata.annotations"
                        },
                        "path": "annotations"
                      }
                    ]
                  },
                  "name": "annotations"
                },
                {
                  "emptyDir": {
                    "medium": "Memory"
                  },
                  "name": "secrets-meta"
                },
                {
                  "emptyDir": {
                    "medium": "Memory"
                  },
                  "name": "vault-data"
                }
              ]
            }
          },
          "ttlSecondsAfterFinished": 3600
        }
      },
      "name": "preflight-check-artifacts-ready",
      "refId": "preflight-check-artifacts-ready",
      "requisiteStageRefIds": [
        "preflight-resolve-git-ref"
      ],
      "source": "text",
      "stageEnabled": {
        "expression": "${ parameters.skipPreflightCheck != \"true\" }",
        "type": "expression"
      },
      "type": "runJobManifest"
    },
    {
      "application": "ml-training-pipelines",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": false,
      "failPipeline": true,
      "name": "ml-training-pipelines",
      "pipeline": "${#pipelineId(\"ml-training-pipelines\")}",
      "pipelineParameters": {
        "gitRef": "${ trigger.parameters.gitRef }"
      },
      "refId": "ml-training-pipelines",
      "requisiteStageRefIds": [
        "preflight-check-artifacts-ready"
      ],
      "skipDownstreamOutput": true,
      "type": "pipeline",
      "waitForCompletion": false
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": false,
      "failPipeline": true,
      "name": "Wait",
      "refId": "wait",
      "requisiteStageRefIds": [
        "ml-training-pipelines"
      ],
      "type": "wait",
      "waitTime": "${#toInt(parameters.lockDuration) * 3600}"
    }
  ],
  "triggers": [
    {
      "enabled": true,
      "payloadConstraints": {},
      "source": "ml-training-pipelines-internaltools-staging-chef-lockable",
      "type": "webhook"
    }
  ]
}